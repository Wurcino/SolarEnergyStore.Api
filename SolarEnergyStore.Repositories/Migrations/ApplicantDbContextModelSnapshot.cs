// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarEnergyStore.Repositories;

#nullable disable

namespace SolarEnergyStore.Repositories.Migrations
{
    [DbContext(typeof(ApplicantDbContext))]
    partial class ApplicantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SolarEnergyStore.Models.DevicePeriodActive.DevicePeriodActiveModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PeriodActive");
                });

            modelBuilder.Entity("SolarEnergyStore.Models.DeviceTemperatureRecord.DeviceTemperatureRecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("DevicePeriodActiveId")
                        .HasColumnType("int");

                    b.Property<double>("ExternalTemperature")
                        .HasColumnType("float");

                    b.Property<double>("InternalTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("MeasurementTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DevicePeriodActiveId");

                    b.ToTable("TemperatureRecords");
                });

            modelBuilder.Entity("SolarEnergyStore.Models.DeviceTemperatureRecord.DeviceTemperatureRecordModel", b =>
                {
                    b.HasOne("SolarEnergyStore.Models.DevicePeriodActive.DevicePeriodActiveModel", "DevicePeriodActive")
                        .WithMany("TemperatureRecords")
                        .HasForeignKey("DevicePeriodActiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevicePeriodActive");
                });

            modelBuilder.Entity("SolarEnergyStore.Models.DevicePeriodActive.DevicePeriodActiveModel", b =>
                {
                    b.Navigation("TemperatureRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
